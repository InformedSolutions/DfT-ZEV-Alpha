@* @using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Options
@using GovUk.Frontend.AspNetCore.TagHelpers
@using DfT.ZEV.ManufacturerReview.Authentication
@inject IConfiguration Configuration

@{
    var passwordExpirationInDays = _cognitoConfiguration.Value.PasswordExpiryInDays;
    var passwordExpirationWarningInDays = _cognitoConfiguration.Value.PasswordExpiryWarningInDays;
    var isUserPasswordManagementEnabled = Configuration.GetValue<bool>("UserPasswordManagementEnabled");
    var isAuthenticated = Context?.User?.Identity?.IsAuthenticated;

    var shouldDisplayWarning = false;
    var daysToExpire = 0;
    if (isAuthenticated == true && isUserPasswordManagementEnabled && passwordExpirationInDays > 0)
    {
        var claim = Context?.User?.Claims?.FirstOrDefault(x => x.Type == CustomIdentityProviderAttributes.PasswordUpdatedAt.AttributeName);
        if (claim == null)
        {
            return;
        }

        var lastUpdatedAtString = claim.Value;
        if (!long.TryParse(lastUpdatedAtString, out var lastUpdatedAtInt)) {
            return;
        }
        var lastUpdatedAt = DateTimeOffset.FromUnixTimeMilliseconds(lastUpdatedAtInt);

        daysToExpire = (lastUpdatedAt.AddDays(passwordExpirationInDays) - DateTimeOffset.UtcNow).Days;
        shouldDisplayWarning = daysToExpire <= passwordExpirationWarningInDays;
    }

}

@if (shouldDisplayWarning)
{
    @if (daysToExpire <= 0)
    {
        <govuk-warning-text icon-fallback-text="Warning" data-test="password-expiry-warning">
            Your password will expire today. Update it now.
        </govuk-warning-text>
    }
    else
    {
        <govuk-warning-text icon-fallback-text="Warning" data-test="password-expiry-warning">
            Your password will expire in @daysToExpire day@(daysToExpire > 1 ? "s" : ""). Update it now.
        </govuk-warning-text>
    }

} *@
